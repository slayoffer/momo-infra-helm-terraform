---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: momo-{{ .Chart.Name }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: "{{ .Chart.Name }}"
    app.kubernetes.io/part-of: momo-store
    env: "{{ .Values.environment }}"
    app: "{{ .Chart.Name }}"
spec:
  revisionHistoryLimit: 15
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
      annotations:
        prometheus.io/path: "{{ .Values.annotations.prometheusPath }}"
        prometheus.io/port: "{{ .Values.annotations.prometheusPort }}"
        prometheus.io/scrape: "{{ .Values.annotations.prometheusScrape }}"
    spec:
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image }}:{{ .Values.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          ports:
            - name: "{{ .Chart.Name }}"
              containerPort: {{ .Values.containerPort }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          startupProbe:
            httpGet:
              path: /auth/whoami
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 15
          readinessProbe:
            httpGet:
              path: /auth/whoami
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 15
      imagePullSecrets:
        - name: docker-config-secret
